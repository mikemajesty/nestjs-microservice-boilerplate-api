version: '3'

services:
  postgres:
    container_name: nestjs-microservice-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - nestjs-microservice-postgres:/data/postgres
      - ./docker/postgres/create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
    restart: always
    networks:
      - postgres-network
  redis:
    container_name: nestjs-microservice-redis
    image: 'redis:alpine'
    volumes:
      - nestjs-microservice-redis:/data
    ports:
      - 6379:6379
  mongo-express:
    container_name: nestjs-microservice-mongo-express
    image: mongo-express:0.49.0
    depends_on:
      - nestjs-microservice-primary
      - nestjs-microservice-secondary
      - nestjs-microservice-tertiary
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env
    networks:
      mongo-network:
  pgadmin:
    container_name: nestjs-microservice-pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - postgres-network

volumes:
  nestjs-microservice-postgres:
  nestjs-microservice-redis:
  mongo-primary-data:
  mongo-secondary-data:
  mongo-tertiary-data:
networks:
  mongo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
  postgres-network:
    driver: bridge
